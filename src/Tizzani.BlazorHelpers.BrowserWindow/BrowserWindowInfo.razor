@using Tizzani.BlazorHelpers.BrowserWindow.Services
@inject IBrowserWindowService WindowService
@implements IDisposable

@code {

    [Parameter] public EventCallback<BrowserWindowDimensions> OnResize { get; set; }
    [Parameter] public EventCallback<BrowserWindowPageOffset> OnScroll { get; set; }

    public void Dispose()
    {
        BrowserResizeListener.OnResize -= HandleResize;
        BrowserScrollListener.OnScroll -= HandleScroll;
    }

    protected override async Task OnInitializedAsync()
    {
        if (OnResize.HasDelegate)
        {
            BrowserResizeListener.OnResize += HandleResize;
            await HandleResize();
        }

        if (OnScroll.HasDelegate)
        {
            BrowserScrollListener.OnScroll += HandleScroll;
            await HandleScroll();
        }
    }

    private async ValueTask HandleResize()
    {
        var dimensions = await WindowService.GetDimensions();
        await OnResize.InvokeAsync(dimensions);
    }

    private async ValueTask HandleScroll()
    {
        var pageOffset = await WindowService.GetPageOffset();
        await OnScroll.InvokeAsync(pageOffset);
    }
}